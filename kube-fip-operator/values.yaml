# Default values for kube-fip-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/joeyloman/kube-fip-operator
  pullPolicy: IfNotPresent
  tag: "v0.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#
# kube-vip-operator configmap default values
#
logLevel: Info
traceIpamData: "false"
kubevipUpdate: "false"
operateGuestClusterInterval: 480
metricsPort: 8080
kubevipGuestInstall: clusterlabel
kubevipNamespace: kube-system
kubevipChartRepoUrl: https://kube-vip.github.io/helm-charts
kubevipChartValues:
  config:
    vip_interface: enp1s0
  image:
    repository: plndr/kube-vip
    tag: v0.4.1
  nodeSelector:
    "node-role.kubernetes.io/master: 'true'"
  tolerations: '[
    {
      "effect": "NoSchedule",
      "key": "node-role.kubernetes.io/master",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "node-role.kubernetes.io/control-plane",
      "operator": "Exists"
    },
    {
      "effect": "NoExecute",
      "key": "node-role.kubernetes.io/etcd",
      "operator": "Exists"
    }
  ]'
kubevipCloudProviderChartValues:
  image:
    repository: kubevip/kube-vip-cloud-provider
    tag: 0.1
removeHarvesterCloudProvider: "false"
harvesterCloudProviderNamespace: kube-system
